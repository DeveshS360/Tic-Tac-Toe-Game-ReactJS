{"version":3,"sources":["square.js","board.js","game.js","index.js"],"names":["Square","props","win","className","onClick","value","Board","i","j","winState","this","squares","winGrid","grid","row","k","push","renderSquare","createGrid","React","Component","Winner","sq","winner","won","cnt1","cnt2","cnt3","cnt4","length","Game","handleClick","his","state","history","slice","stepNo","current","square","JSON","parse","stringify","XChance","step","concat","rev","reverse","setState","reverseHistory","jumpTo","moveNo","jumpReverseTo","reverseStepNo","handleToggle","sortedReverse","Array","fill","map","x","status","revHistory","isTied","Tie","currTurn","moves","curr","desc","val","style","listStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ef99b93.chunk.js","sourcesContent":["\n\nfunction Square(props) {\n\n    if(props.win)\n      return (\n        <button className=\"square-win\" onClick={props.onClick}>\n          {props.value}\n        </button>\n      );\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n          {props.value}\n        </button>\n      );\n    \n    \n  }\n\nexport default Square;","import React from 'react';\nimport Square from './square.js';\n\nclass Board extends React.Component {\n   \n    renderSquare(i,j,winState) { \n      return <Square key={3*i+j} value={this.props.squares[i][j]} win={winState}\n      onClick={()=>this.props.onClick(i,j)}/>;\n    }\n\n\n    createGrid(winGrid){\n      \n      const grid = [];\n      for(let i=0;i<3;i++)\n        {\n          const row = [];\n          for(let j=0;j<3;j++)\n            {\n              let winState=false;\n              if(winGrid)\n                for(let k=0;k<3;k++)\n                  {\n                    if(winGrid[k][0]===i && winGrid[k][1]===j)\n                      winState=true;\n                  }\n              row.push(this.renderSquare(i,j,winState));\n            }\n          grid.push(<div key={i} className=\"board-row\" >{row}</div>);\n        }\n      return grid;\n    }\n  \n    render() {\n\n      return (\n        <div>\n          {this.createGrid(this.props.winGrid)}\n        </div>\n      );\n    }\n  }\n\nexport default Board;","import React from 'react';\nimport Board from './board.js';\n\nclass Game extends React.Component {\n\n    constructor(props){\n      super(props);\n      this.state = {\n        history:[\n          {squares:Array(3).fill(null).map(x => x = new Array(3).fill(null))\n          }\n        ],\n        XChance:true,\n        stepNo:0,\n        reverseStepNo:0,\n        reverseHistory:[\n            {squares:Array(3).fill(null).map(x => x = new Array(3).fill(null))\n            }\n        ],\n        sortedReverse:false\n      }\n        \n    }\n\n\n    handleClick= (i,j)=>{\n      var his = this.state.history.slice(0,this.state.stepNo+1);\n      const current = his[his.length-1];\n      const square = JSON.parse(JSON.stringify(current.squares));\n\n      const win = Winner(square);\n      if(win.won){\n        return ;\n      }\n      else if(square[i][j])\n        return ;\n\n      square[i][j] = this.state.XChance ? 'X' : 'O';\n      \n      const step = his.length;\n      his = his.concat({squares:square});\n      const rev = JSON.parse(JSON.stringify(his));\n      rev.reverse();\n      \n      this.setState({history:his,XChance:!this.state.XChance,stepNo:step,reverseHistory:rev});\n      \n      \n      \n    \n    }\n\n\n    jumpTo=(moveNo)=>{\n      this.setState({stepNo:moveNo,XChance:(moveNo%2) === 0});\n       \n    }\n\n    jumpReverseTo=(moveNo)=>{\n        this.setState({reverseStepNo:moveNo,XChance:(moveNo%2)===0});\n    }\n\n    handleToggle = ()=>{\n        this.setState({sortedReverse:!this.state.sortedReverse});\n    }\n\n\n    render() {\n\n      const history = this.state.history;\n      const revHistory = this.state.reverseHistory;\n      \n      const current = history[this.state.stepNo];\n      \n      \n      const win = Winner(current.squares);\n      const isTied = Tie(current.squares);\n\n      const currTurn = this.state.XChance?'X':'O';\n      let moves = null;\n      if(this.state.sortedReverse===false){\n         moves = history.map((curr,moveNo)=> {\n            \n            const desc = moveNo ? 'Go to move #' + moveNo : 'Go to start';\n            return (\n            <li key={moveNo}> \n                <button className={`click${this.state.stepNo===moveNo ? \" bold\" : \"\"}`}  onClick={()=>{this.jumpTo(moveNo)}}>{desc} </button>\n            </li>\n            )\n        })\n      }\n      else\n        {\n            moves = revHistory.map((curr,moveNo)=>{\n\n                const val = revHistory.length-1-moveNo;\n                const desc = moveNo!==revHistory.length-1 ? 'Go to move #' + val : 'Go to start';\n                return (\n                    <li key={moveNo}> \n                        <button className={`click${this.state.stepNo===val ? \" bold\" : \"\"}`}  onClick={()=>{this.jumpTo(val)}}>{desc} </button>\n                    </li>\n                    )\n            })\n        }\n\n\n      let status;\n      if(win.won){\n        status = win.won + ' Won, Game Over!';\n      }\n      else if(isTied){\n        status = 'Game tied!';\n      }\n      else\n        {\n          status = 'Next Player: '+currTurn;\n        }\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board squares={current.squares}\n            onClick={(i,j)=>{this.handleClick(i,j)}} winGrid={win.winGrid}/>\n            \n            <button className='toggle' onClick={()=>{this.handleToggle()}}>Toggle History</button>\n          </div>\n          <div className=\"game-info\">\n            <div>{ status }</div>\n            <ol style={{listStyle:\"none\"}}>{moves}</ol>\n          </div>\n        </div>  \n      );\n    }\n  }\n  \n  function Tie(sq)\n    {\n      \n      for(let i=0;i<3;i++)\n        for(let j=0;j<3;j++)\n          if(sq[i][j]===null)\n            return false;\n\n      return true;\n    }\n\n  function Winner(sq){\n\n    const winner = {won:null,winGrid:null};\n\n    \n\n    for(let i=0;i<3;i++)\n      {\n        for(let j=0;j<3;j++)\n          {\n            if(sq[i][j]===null)\n              continue;\n            const cnt1=[],cnt2=[],cnt3=[],cnt4=[];\n            cnt1.push([i,j]);\n            cnt2.push([i,j]);\n            cnt3.push([i,j]);\n            cnt4.push([i,j]);\n            if(j+1<3 && sq[i][j]===sq[i][j+1])\n              cnt1.push([i,j+1]);\n            if(j-1>=0 && sq[i][j]===sq[i][j-1])\n              cnt1.push([i,j-1]);\n            if(i+1<3 && sq[i][j]===sq[i+1][j])\n              cnt2.push([i+1,j])\n            if(i-1>=0 && sq[i][j]===sq[i-1][j])\n              cnt2.push([i-1,j])\n            if(i+1<3 && j+1<3 && (sq[i][j]===sq[i+1][j+1]))\n              cnt3.push([i+1,j+1]);\n            if(i-1>=0 && j-1>=0 && (sq[i][j]===sq[i-1][j-1]))\n              cnt3.push([i-1,j-1]);\n            if(i-1>=0 && j+1<3 && (sq[i][j]===sq[i-1][j+1]))\n              cnt4.push([i-1,j+1])\n            if(i+1<3 && j-1>=0 && (sq[i][j]===sq[i+1][j-1]))\n              cnt4.push([i+1,j-1]);\n            if(cnt1.length===3 || cnt2.length===3 || cnt3.length===3 || cnt4.length===3){\n              \n              winner.won=sq[i][j];\n            }\n            if(cnt1.length===3)\n              {\n                winner.winGrid=cnt1;\n              }\n            else if(cnt2.length===3)\n              {\n                winner.winGrid=cnt2;\n              }\n            else if(cnt3.length===3)\n              {\n                winner.winGrid=cnt3;\n              }\n            else if(cnt4.length===3)\n              {\n                winner.winGrid=cnt4;\n              }\n            \n\n          }\n      }\n\n    return winner;\n\n}\n\nexport default Game;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './game.js';\nimport './index.css';\n\n  \nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  \n\n\n"],"sourceRoot":""}